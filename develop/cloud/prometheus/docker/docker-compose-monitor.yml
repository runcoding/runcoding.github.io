version: '2'

networks:
  monitor:
    driver: bridge

services:
  prometheus:
    image: prom/prometheus:v2.12.0
    container_name: prometheus
    hostname: prometheus
    restart: always
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/node_down.yml:/etc/prometheus/node_down.yml
    ports:
      - "9090:9090"
    networks:
      - monitor

  alertmanager:
    image: prom/alertmanager:v0.18.0
    container_name: alertmanager
    hostname: alertmanager
    restart: always
    volumes:
      - ./config/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9093:9093"
    networks:
      - monitor

  grafana:
    image: grafana/grafana:6.3.3
    container_name: grafana
    hostname: grafana
    restart: always
    volumes:
      - ./store/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./store/grafana/data:/var/lib/grafana:rw
      - ./store/grafana/plugins:/var/lib/grafana/plugins:rw
      - ./store/grafana/provisioning:/var/lib/grafana/provisioning:rw
    ports:
      - "3030:3000"
    networks:
      - monitor

# 负责收集 host 硬件和操作系统数据。它将以容器方式运行在所有 host 上
  node-exporter:
    image: prom/node-exporter:v0.18.1
    container_name: node-exporter
    hostname: node-exporter
    restart: always
    ports:
      - "9100:9100"
    networks:
      - monitor

# 负责收集容器数据。它将以容器方式运行在所有 host 上
  cadvisor:
    image: google/cadvisor:v0.33.0
    container_name: cadvisor
    hostname: cadvisor
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8071:8080"
    networks:
      - monitor